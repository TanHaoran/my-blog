(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{217:function(s,a,t){"use strict";t.r(a);var n=t(0),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"jmm和底层实现原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jmm和底层实现原理"}},[s._v("#")]),s._v(" JMM和底层实现原理")]),s._v(" "),t("Counter",{attrs:{path:"backend",name:"JMM和底层实现原理"}}),s._v(" "),t("h2",{attrs:{id:"一、jmm基础-计算机原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、jmm基础-计算机原理"}},[s._v("#")]),s._v(" 一、JMM基础-计算机原理")]),s._v(" "),t("p",[s._v("Java 内存模型即 "),t("code",[s._v("Java Memory Model")]),s._v("，简称 "),t("code",[s._v("JMM")]),s._v("。"),t("code",[s._v("JMM")]),s._v(" 定义了 Java 虚拟机("),t("code",[s._v("JVM")]),s._v(")在计算机内存("),t("code",[s._v("RAM")]),s._v(")中的工作方式。"),t("code",[s._v("JVM")]),s._v(" 是整个计算机虚拟模型，所以 "),t("code",[s._v("JMM")]),s._v(" 是隶属于 "),t("code",[s._v("JVM")]),s._v(" 的。"),t("code",[s._v("Java1.5")]),s._v(" 版本对其进行了重构，现在的 "),t("code",[s._v("Java")]),s._v(" 仍沿用了 "),t("code",[s._v("Java1.5")]),s._v(" 的版本。"),t("code",[s._v("JMM")]),s._v(" 遇到的问题与现代计算机中遇到的问题是差不多的。")]),s._v(" "),t("p",[s._v("物理计算机中的并发问题，物理机遇到的并发问题与虚拟机中的情况有不少相似之处，物理机对并发的处理方案对于虚拟机的实现也有相当大的参考意义。")]),s._v(" "),t("p",[s._v("早期计算机中 "),t("code",[s._v("CPU")]),s._v(" 和内存的速度是差不多的，但在现代计算机中，"),t("code",[s._v("CPU")]),s._v(" 的指令速度远超内存的存取速度，由于计算机的存储设备与处理器的运算速度有几个数量级的差距，所以现代计算机系统都不得不加入一层读写速度尽可能接近处理器运算速度的高速缓存（"),t("code",[s._v("Cache")]),s._v("）来作为内存与处理器之间的缓冲：将运算需要使用到的数据复制到缓存中，让运算能快速进行，当运算结束后再从缓存同步回内存之中，这样处理器就无须等待缓慢的内存读写了。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm.png",alt:"cache"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm2.png",alt:"cache2"}})]),s._v(" "),t("p",[s._v("在计算机系统中，寄存器划是 "),t("code",[s._v("L0")]),s._v(" 级缓存，接着依次是 "),t("code",[s._v("L1")]),s._v("、"),t("code",[s._v("L2")]),s._v("、"),t("code",[s._v("L3")]),s._v("（接下来是内存，本地磁盘，远程存储）。越往上的缓存存储空间越小，速度越快，成本也更高；越往下的存储空间越大，速度更慢，成本也更低。从上至下，每一层都可以看做是更下一层的缓存，即："),t("code",[s._v("L0")]),s._v(" 寄存器是 "),t("code",[s._v("L1")]),s._v(" 的缓存，"),t("code",[s._v("L1")]),s._v(" 是 "),t("code",[s._v("L2")]),s._v(" 的缓存，依次类推；每一层的数据都是来至它的下一层，所以每一层的数据是下一层的数据的子集。")]),s._v(" "),t("p",[s._v("下面是各个缓存的读（Read）、写（Write）、复制（Copy）和执行一个指令的时间周期（Latency）。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm3.png",alt:"cache3"}})]),s._v(" "),t("p",[s._v("在现代 "),t("code",[s._v("CPU")]),s._v(" 上，一般来说 "),t("code",[s._v("L0")]),s._v("、"),t("code",[s._v("L1")]),s._v("、"),t("code",[s._v("L2")]),s._v("、"),t("code",[s._v("L3")]),s._v(" 都集成在 "),t("code",[s._v("CPU")]),s._v(" 内部，而 "),t("code",[s._v("L1")]),s._v(" 还分为一级数据缓存（Data Cache，D-Cache，L1d）和一级指令缓存（Instruction Cache，I-Cache，L1i），分别用于存放数据和执行数据的指令解码。每个核心拥有独立的运算处理单元、控制器、寄存器、L1、L2 缓存，然后一个 "),t("code",[s._v("CPU")]),s._v(" 的多个核心共享最后一层 "),t("code",[s._v("CPU")]),s._v(" 缓存 "),t("code",[s._v("L3")]),s._v("。")]),s._v(" "),t("h2",{attrs:{id:"二、物理内存模型带来的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、物理内存模型带来的问题"}},[s._v("#")]),s._v(" 二、物理内存模型带来的问题")]),s._v(" "),t("p",[s._v("基于高速缓存的存储交互很好地解决了处理器与内存的速度矛盾，但是也为计算机系统带来更高的复杂度，因为它引入了一个新的问题：缓存一致性（CacheCoherence）。在多处理器系统中，每个处理器都有自己的高速缓存，而它们又共享同一主内存（MainMemory）。当多个处理器的运算任务都涉及同一块主内存区域时，将可能导致各自的缓存数据不一致。")]),s._v(" "),t("p",[s._v("现代的处理器使用写缓冲区临时保存向内存写入的数据。写缓冲区可以保证指令流水线持续运行，它可以避免由于处理器停顿下来等待向内存写入数据而产生的延迟。同时，通过以批处理的方式刷新写缓冲区，以及合并写缓冲区中对同一内存地址的多次写，减少对内存总线的占用。虽然写缓冲区有这么多好处，但每个处理器上的写缓冲区，仅仅对它所在的处理器可见。这个特性会对内存操作的执行顺序产生重要的影响：处理器对内存的读/写操作的执行顺序，不一定与内存实际发生的读/写操作顺序一致。")]),s._v(" "),t("p",[s._v("下面看这样子的情况：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm4.png",alt:"缓存数据不一致"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm5.png",alt:"执行逻辑"}})]),s._v(" "),t("p",[s._v("处理器 A 和处理器 B 按程序的顺序并行执行内存访问，最终可能得到 "),t("code",[s._v("x = y = 0")]),s._v(" 的结果。")]),s._v(" "),t("p",[s._v("处理器 A 和处理器 B 可以同时把共享变量写入自己的写缓冲区（步骤 A1，B1），然后从内存中读取另一个共享变量（步骤 A2，B2），最后才把自己写缓存区中保存的脏数据刷新到内存中（步骤 A3，B3）。当以这种时序执行时，程序就可以得到 "),t("code",[s._v("x = y = 0")]),s._v(" 的结果。")]),s._v(" "),t("p",[s._v("从内存操作实际发生的顺序来看，直到处理器 A 执行 A3 来刷新自己的写缓存区，写操作 A1 才算真正执行了。虽然处理器 A 执行内存操作的顺序为：A1 -> A2，但内存操作实际发生的顺序却是 A2 -> A1。")]),s._v(" "),t("p",[s._v("如果真的发生这种情况，那同步回到主内存时以谁的缓存数据为准呢？为了解决一致性的问题，需要各个处理器访问缓存时都遵循一些协议，在读写时要根据协议来进行操作，这类协议有 "),t("code",[s._v("MSI")]),s._v("、"),t("code",[s._v("MESI")]),s._v("（Illinois Protocol）、"),t("code",[s._v("MOSI")]),s._v("、"),t("code",[s._v("Synapse")]),s._v("、"),t("code",[s._v("Firefly")]),s._v(" 及 "),t("code",[s._v("Dragon Protocol")]),s._v(" 等。")]),s._v(" "),t("h2",{attrs:{id:"三、伪共享"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、伪共享"}},[s._v("#")]),s._v(" 三、伪共享")]),s._v(" "),t("p",[s._v("前面我们已经知道，"),t("code",[s._v("CPU")]),s._v(" 中有好几级高速缓存。但是 "),t("code",[s._v("CPU")]),s._v(" 缓存系统中是以缓存行（cache line）为单位存储的。目前主流的 "),t("code",[s._v("CPU Cache")]),s._v(" 的 "),t("code",[s._v("Cache Line")]),s._v(" 大小都是 64Bytes。"),t("code",[s._v("Cache Line")]),s._v(" 可以简单的理解为 "),t("code",[s._v("CPU Cache")]),s._v(" 中的最小缓存单位，今天的 "),t("code",[s._v("CPU")]),s._v(" 不再是按字节访问内存，而是以 64 字节为单位的块(chunk)拿取，称为一个缓存行(cache line)。当你读一个特定的内存地址，整个缓存行将从主存换入缓存。")]),s._v(" "),t("p",[s._v("一个缓存行可以存储多个变量（存满当前缓存行的字节数）；而 "),t("code",[s._v("CPU")]),s._v(" 对缓存的修改又是以缓存行为最小单位的，在多线程情况下，如果需要修改“共享同一个缓存行的变量”，就会无意中影响彼此的性能，这就是伪共享（False Sharing）。")]),s._v(" "),t("p",[s._v("为了避免伪共享，我们可以使用数据填充的方式来避免，即单个数据填充满一个 "),t("code",[s._v("Cache Line")]),s._v("。这本质是一种空间换时间的做法。但是这种方式在 Java7 以后可能失效。")]),s._v(" "),t("p",[s._v("Java8 中已经提供了官方的解决方案，Java8 中新增了一个注解 "),t("code",[s._v("@sun.misc.Contended")]),s._v("。比如 "),t("code",[s._v("JDK")]),s._v(" 的 "),t("code",[s._v("ConcurrentHashMap")]),s._v(" 中就有使用。")]),s._v(" "),t("p",[s._v("加上这个注解的类会自动补齐缓存行，需要注意的是此注解默认是无效的，需要在 "),t("code",[s._v("jvm")]),s._v(" 启动时设置 "),t("code",[s._v("-XX:-RestrictContended")]),s._v(" 才会生效。")]),s._v(" "),t("p",[s._v("下面是一个例子：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FalseSharing")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" NUM_THREADS "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runtime")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getRuntime")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("availableProcessors")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" ITERATIONS "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("500L")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000L")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000L")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" arrayIndex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("VolatileLong")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" longs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("VolatileLong")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("NUM_THREADS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    private static VolatileLongPadding[] longs = new VolatileLongPadding[NUM_THREADS];")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    private static VolatileLongAnno[] longs = new VolatileLongAnno[NUM_THREADS];")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将数组初始化")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" longs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            longs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("VolatileLong")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FalseSharing")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" arrayIndex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("arrayIndex "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" arrayIndex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Exception")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" start "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nanoTime")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("runTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"duration = "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nanoTime")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" start"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("runTest")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建和CPU数相同的线程")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" threads "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("NUM_THREADS"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" threads"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            threads"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FalseSharing")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" t "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" threads"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等待所有线程执行完成")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" t "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" threads"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 访问数组\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ITERATIONS "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            longs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("arrayIndex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("VolatileLong")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0L")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * long padding 避免 false sharing\n     * 按理说 jdk7 以后 long padding 应该被优化掉了，但是从测试结果看 padding 仍然起作用\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("VolatileLongPadding")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" p1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" p2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" p3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" p4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" p5"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" p6"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" p7"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0L")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" q0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" q1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" q2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" q3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" q4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" q5"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" q6"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * jdk8新特性，Contended注解避免false sharing\n     * Restricted on user classpath\n     * Unlock: -XX:-RestrictContended\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@sun")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("misc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Contended")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("VolatileLongAnno")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0L")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br")])]),t("p",[s._v("定义了三种类型的数组："),t("code",[s._v("VolatileLong")]),s._v("、"),t("code",[s._v("VolatileLongPadding")]),s._v(" 和 "),t("code",[s._v("VolatileLongAnno")]),s._v("。")]),s._v(" "),t("p",[t("code",[s._v("VolatileLong")]),s._v(" 的数组中 中只定义了一个 "),t("code",[s._v("volatile")]),s._v(" 类型的 "),t("code",[s._v("long")]),s._v(" 型变量，然后让多个线程同时并发访问这个数组，这时可以想到，在多个线程同时处理数据时，数组中的多个 "),t("code",[s._v("VolatileLong")]),s._v(" 对象可能存在同一个缓存行中。")]),s._v(" "),t("p",[s._v("此时的执行结果：")]),s._v(" "),t("div",{staticClass:"language-console line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("duration = 43155496101\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("大约花费了43.2秒。")]),s._v(" "),t("p",[s._v("将 "),t("code",[s._v("longs")]),s._v(" 数组替换为 "),t("code",[s._v("VolatileLongPadding")]),s._v(" 数组，然后在 "),t("code",[s._v("volatile")]),s._v(" 类型的变量前后使用多个变量进行缓存行的填充，改进后的执行结果：")]),s._v(" "),t("div",{staticClass:"language-console line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("duration = 6107263700\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("速度提升至6.1秒左右。")]),s._v(" "),t("p",[s._v("接下来使用 "),t("code",[s._v("VolatileLongAnno")]),s._v(" 类型的数组，也就是使用了 "),t("code",[s._v("@sun.misc.Contended")]),s._v(" 注解进行优化，同时加入启动参数 "),t("code",[s._v("-XX:-RestrictContended")]),s._v(" ，此时执行结果：")]),s._v(" "),t("div",{staticClass:"language-console line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("duration = 6028898899\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("速度进一步优化到了6.0秒左右。")]),s._v(" "),t("h2",{attrs:{id:"四、java内存模型（jmm）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、java内存模型（jmm）"}},[s._v("#")]),s._v(" 四、Java内存模型（JMM）")]),s._v(" "),t("p",[s._v("从抽象的角度来看，"),t("code",[s._v("JMM")]),s._v(" 定义了线程和主内存之间的抽象关系：线程之间的共享变量存储在主内存（"),t("code",[s._v("Main Memory")]),s._v("）中，每个线程都有一个私有的本地内存（"),t("code",[s._v("Local Memory")]),s._v("），本地内存中存储了该线程以读/写共享变量的副本。本地内存是 "),t("code",[s._v("JMM")]),s._v(" 的一个抽象概念，并不真实存在。它涵盖了缓存、写缓冲区、寄存器以及其他的硬件和编译器优化。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm6.png",alt:"jmm"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm7.png",alt:"jmm2"}})]),s._v(" "),t("h2",{attrs:{id:"五、java内存模型带来的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、java内存模型带来的问题"}},[s._v("#")]),s._v(" 五、Java内存模型带来的问题")]),s._v(" "),t("h3",{attrs:{id:"_1、可见性问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、可见性问题"}},[s._v("#")]),s._v(" 1、可见性问题")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm8.png",alt:"可见性问题"}})]),s._v(" "),t("p",[s._v("左边 "),t("code",[s._v("CPU")]),s._v(" 中运行的线程从主存中拷贝共享对象 "),t("code",[s._v("obj")]),s._v(" 到它的 "),t("code",[s._v("CPU")]),s._v(" 缓存，把对象 "),t("code",[s._v("obj")]),s._v(" 的 "),t("code",[s._v("count")]),s._v(" 变量改为 2。但这个变更对运行在右边 "),t("code",[s._v("CPU")]),s._v(" 中的线程不可见，因为这个更改还没有 "),t("code",[s._v("flush")]),s._v(" 到主存中。")]),s._v(" "),t("p",[s._v("在多线程的环境下，如果某个线程首次读取共享变量，则首先到主内存中获取该变量，然后存入工作内存中，以后只需要在工作内存中读取该变量即可。同样如果对该变量执行了修改的操作，则先将新值写入工作内存中，然后再刷新至主内存中。但是什么时候最新的值会被刷新至主内存中是不太确定，一般来说会很快，但具体时间不知。")]),s._v(" "),t("p",[s._v("要解决共享对象可见性这个问题，我们可以使用 "),t("code",[s._v("volatile")]),s._v(" 关键字或者是加锁。")]),s._v(" "),t("h3",{attrs:{id:"_2、竞争问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、竞争问题"}},[s._v("#")]),s._v(" 2、竞争问题")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm9.png",alt:"竞争问题"}})]),s._v(" "),t("p",[s._v("线程 A 和线程 B 共享一个对象 "),t("code",[s._v("obj")]),s._v("。假设线程 A 从主存读取 "),t("code",[s._v("obj.count")]),s._v(" 变量到自己的 "),t("code",[s._v("CPU")]),s._v(" 缓存，同时，线程 B 也读取了 "),t("code",[s._v("obj.count")]),s._v(" 变量到它的 "),t("code",[s._v("CPU")]),s._v(" 缓存，并且这两个线程都对 "),t("code",[s._v("obj.count")]),s._v(" 做了加 1 操作。此时，"),t("code",[s._v("obj.count")]),s._v(" 加 1 操作被执行了两次，不过都在不同的 "),t("code",[s._v("CPU")]),s._v(" 缓存中。")]),s._v(" "),t("p",[s._v("如果这两个加 1 操作是串行执行的，那么 "),t("code",[s._v("obj.count")]),s._v(" 变量便会在原始值上加2，最终主存中的 "),t("code",[s._v("obj.count")]),s._v(" 的值会是 3。然而图中两个加 1 操作是并行的，不管是线程 A 还是线程 B 先 "),t("code",[s._v("flush")]),s._v(" 计算结果到主存，最终主存中的 "),t("code",[s._v("obj.count")]),s._v(" 只会增加 1 次变成 2，尽管一共有两次加 1 操作。 要解决上面的问题我们可以使用 "),t("code",[s._v("synchronized")]),s._v(" 代码块。")]),s._v(" "),t("h3",{attrs:{id:"_3、重排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、重排序"}},[s._v("#")]),s._v(" 3、重排序")]),s._v(" "),t("h4",{attrs:{id:"_1-重排序类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-重排序类型"}},[s._v("#")]),s._v(" (1) 重排序类型")]),s._v(" "),t("p",[s._v("除了共享内存和工作内存带来的问题，还存在重排序的问题：在执行程序时，为了提高性能，编译器和处理器常常会对指令做重排序。重排序分 3 种类型。")]),s._v(" "),t("ol",[t("li",[s._v("编译器优化的重排序。编译器在不改变单线程程序语义的前提下，可以重新安排语句的执行顺序。")]),s._v(" "),t("li",[s._v("指令级并行的重排序。现代处理器采用了指令级并行技术（Instruction-LevelParallelism，ILP）来将多条指令重叠执行。如果不存在数据依赖性，处理器可以改变语句对应机器指令的执行顺序。")]),s._v(" "),t("li",[s._v("内存系统的重排序。由于处理器使用缓存和读/写缓冲区，这使得加载和存储操作看上去可能是在乱序执行。")])]),s._v(" "),t("h4",{attrs:{id:"_2-数据依赖性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据依赖性"}},[s._v("#")]),s._v(" (2) 数据依赖性")]),s._v(" "),t("p",[s._v("如果两个操作访问同一个变量，且这两个操作中有一个为写操作，此时这两个操作之间就存在数据依赖性。数据依赖分为下列 3 种类型，上面的 3 种情况，只要重排序两个操作的执行顺序，程序的执行结果就会被改变。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("名称")]),s._v(" "),t("th",[s._v("代码示例")]),s._v(" "),t("th",[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("写后读")]),s._v(" "),t("td",[s._v("a = 1;"),t("br"),s._v("b = a;")]),s._v(" "),t("td",[s._v("写一个变量之后，再读这个变量")])]),s._v(" "),t("tr",[t("td",[s._v("写后写")]),s._v(" "),t("td",[s._v("a = 1;"),t("br"),s._v("a = 2;")]),s._v(" "),t("td",[s._v("写一个变量之后，再写这个变量")])]),s._v(" "),t("tr",[t("td",[s._v("读后写")]),s._v(" "),t("td",[s._v("a = b;"),t("br"),s._v("b = 1;")]),s._v(" "),t("td",[s._v("读一个变量之后，再写这个变量")])])])]),s._v(" "),t("p",[s._v("当依赖关系如下图所示时")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm10.png",alt:"依赖关系"}})]),s._v(" "),t("p",[s._v("A 和 C 存在数据依赖，B 和 C 也存在数据依赖，而 A 和 B 之间不存在数据依赖，如果重排序了 A 和 C 或者 B 和 C 的执行顺序，程序的执行结果就会被改变。")]),s._v(" "),t("p",[s._v("不管如何重排序，都必须保证代码在单线程下的运行正确，连单线程下都无法正确，更不用讨论多线程并发的情况，所以就提出了一个 "),t("code",[s._v("as-if-serial")]),s._v(" 的概念。")]),s._v(" "),t("h5",{attrs:{id:"as-if-serial"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#as-if-serial"}},[s._v("#")]),s._v(" as-if-serial")]),s._v(" "),t("p",[t("code",[s._v("as-if-serial")]),s._v(" 语义的意思是：不管怎么重排序（编译器和处理器为了提高并行度），（单线程）程序的执行结果不能被改变。编译器、runtime 和处理器都必须遵守 "),t("code",[s._v("as-if-serial")]),s._v(" 语义。")]),s._v(" "),t("p",[s._v("为了遵守 "),t("code",[s._v("as-if-serial")]),s._v(" 语义，编译器和处理器不会对存在数据依赖关系的操作做重排序，因为这种重排序会改变执行结果。（强调一下，这里所说的数据依赖性仅针对单个处理器中执行的指令序列和单个线程中执行的操作，不同处理器之间和不同线程之间的数据依赖性不被编译器和处理器考虑。）但是，如果操作之间不存在数据依赖关系，这些操作依然可能被编译器和处理器重排序。")]),s._v(" "),t("p",[s._v("例如上图中所示的 A、B、C 三者之间的关系中，A 和 C 之间存在数据依赖关系，同时 B 和 C 之间也存在数据依赖关系。因此在最终执行的指令序列中，C 不能被重排序到 A 和 B 的前面（C 排到 A 和 B 的前面，程序的结果将会被改变）。但 A 和 B 之间没有数据依赖关系，编译器和处理器可以重排序 A 和 B 之间的执行顺序。")]),s._v(" "),t("p",[t("code",[s._v("as-if-serial")]),s._v(" 语义把单线程程序保护了起来，遵守 "),t("code",[s._v("as-if-serial")]),s._v(" 语义的编译器、runtime 和处理器可以让我们感觉到：单线程程序看起来是按程序的顺序来执行的。"),t("code",[s._v("asif-serial")]),s._v(" 语义使单线程程序员无需担心重排序会干扰他们，也无需担心内存可见性问题。")]),s._v(" "),t("h4",{attrs:{id:"_3-控制依赖性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-控制依赖性"}},[s._v("#")]),s._v(" (3) 控制依赖性")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ControlDep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" flag "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 操作1")]),s._v("\n        a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 操作2")]),s._v("\n        flag "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//.......")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("use")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 操作3")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("flag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 操作4")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("p",[s._v("上述代码中，"),t("code",[s._v("flag")]),s._v(" 变量是个标记，用来标识变量 "),t("code",[s._v("a")]),s._v(" 是否已被写入，在 "),t("code",[s._v("use()")]),s._v(" 方法中变量 "),t("code",[s._v("i")]),s._v(" 的赋值依赖 "),t("code",[s._v("flag")]),s._v(" 的判断，这里就叫控制依赖，如果发生了重排序，结果就不对了。")]),s._v(" "),t("p",[s._v("操作 1 和操作 2 没有数据依赖关系，编译器和处理器可以对这两个操作重排序；同样，操作 3 和操作 4 没有数据依赖关系，编译器和处理器也可以对这两个操作重排序。操作 3 和操作 4 则存在所谓控制依赖关系。")]),s._v(" "),t("p",[s._v("在程序中，当代码中存在控制依赖性时，会影响指令序列执行的并行度。为此，编译器和处理器会采用猜测（Speculation）执行来克服控制相关性对并行度的影响。以处理器的猜测执行为例，执行线程 B 的处理器可以提前读取并计算a*a，然后把计算结果临时保存到一个名为重排序缓冲（Reorder Buffer，ROB）的硬件缓存中。当操作 3 的条件判断为真时，就把该计算结果写入变量 i 中。猜测执行实质上对操作 3 和 4 做了重排序，问题在于这时候，a 的值还没被线程 A赋值。")]),s._v(" "),t("p",[s._v("在单线程程序中，对存在控制依赖的操作重排序，不会改变执行结果（这也是 "),t("code",[s._v("as-if-serial")]),s._v(" 语义允许对存在控制依赖的操作做重排序的原因）。")]),s._v(" "),t("p",[s._v("但是对多线程来说就完全不同了：这里假设有两个线程 A 和 B，A 首先执行 "),t("code",[s._v("init()")]),s._v(" 方法，随后 B 线程接着执行 "),t("code",[s._v("use()")]),s._v(" 方法。线程 B 在执行操作 4 时，能否看到线程 A 在操作 1 对共享变量 a 的写入呢？答案是：不一定能看到。")]),s._v(" "),t("p",[s._v("让我们先来看看，当操作 1 和操作 2 重排序，操作 3 和操作 4 重排序时，可能会产生什么效果？操作 1 和操作 2 做了重排序。程序执行时，线程 A 首先写标记变量 flag，随后线程 B 读这个变量。由于条件判断为真，线程 B 将读取变量 a。此时，变量 a 还没有被线程 A 写入，这时就会发生错误！")]),s._v(" "),t("p",[s._v("所以在多线程程序中，对存在控制依赖的操作重排序，可能会改变程序的执行结果。")]),s._v(" "),t("h2",{attrs:{id:"六、解决并发下的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、解决并发下的问题"}},[s._v("#")]),s._v(" 六、解决并发下的问题")]),s._v(" "),t("h3",{attrs:{id:"_1、内存屏障-memory-barrier"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、内存屏障-memory-barrier"}},[s._v("#")]),s._v(" 1、内存屏障 Memory Barrier")]),s._v(" "),t("p",[t("code",[s._v("Java")]),s._v(" 编译器在生成指令序列的适当位置会插入内存屏障指令来禁止特定类型的处理器重排序，从而让程序按我们预想的流程去执行。内存屏障的作用是：")]),s._v(" "),t("ol",[t("li",[s._v("保证特定操作的执行顺序。")]),s._v(" "),t("li",[s._v("影响某些数据（或则是某条指令的执行结果）的内存可见性。")])]),s._v(" "),t("p",[s._v("编译器和 "),t("code",[s._v("CPU")]),s._v(" 能够重排序指令，保证最终相同的结果，尝试优化性能。插入一条 "),t("code",[s._v("Memory Barrier")]),s._v(" 会告诉编译器和 "),t("code",[s._v("CPU")]),s._v("：不管什么指令都不能和这条 "),t("code",[s._v("Memory Barrier")]),s._v(" 指令重排序。")]),s._v(" "),t("p",[t("code",[s._v("Memory Barrier")]),s._v(" 所做的另外一件事是强制刷出各种 "),t("code",[s._v("CPU cache")]),s._v("，如一个 "),t("code",[s._v("Write-Barrier")]),s._v("（写入屏障）将刷出所有在 "),t("code",[s._v("Barrier")]),s._v(" 之前写入 "),t("code",[s._v("cache")]),s._v(" 的数据，因此，任何 "),t("code",[s._v("CPU")]),s._v(" 上的线程都能读取到这些数据的最新版本。")]),s._v(" "),t("p",[s._v("JMM 把内存屏障指令分为 4 类")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("屏障类型")]),s._v(" "),t("th",[s._v("指令示例")]),s._v(" "),t("th",[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("LoadLoad Barriers")]),s._v(" "),t("td",[s._v("Load1;"),t("br"),s._v("LoadLoad;"),t("br"),s._v("Load2")]),s._v(" "),t("td",[s._v("确保 Load1 数据的装载必须之前于 Load2 以及所有后续装载指令的装载")])]),s._v(" "),t("tr",[t("td",[s._v("StoreStore Barriers")]),s._v(" "),t("td",[s._v("Store1;"),t("br"),s._v("StoreStore;"),t("br"),s._v("Store2")]),s._v(" "),t("td",[s._v("确保 Store1 数据对其他处理器可见（刷新到内存）必须之前于 Store2 以及所有后续存储指令的存储")])]),s._v(" "),t("tr",[t("td",[s._v("LoadStore Barriers")]),s._v(" "),t("td",[s._v("Load1;"),t("br"),s._v("LoadStore;"),t("br"),s._v("Store2")]),s._v(" "),t("td",[s._v("确保 Load1 数据的装载必须之前于 Store2 以及所有后续存储指令刷新到内存")])]),s._v(" "),t("tr",[t("td",[s._v("StoreLoad Barriers")]),s._v(" "),t("td",[s._v("Store1;"),t("br"),s._v("StoreLoad;"),t("br"),s._v("Load2")]),s._v(" "),t("td",[s._v("确保 Store1 数据对其他处理器变得可见（刷新到内存）必须之前于 Load2 以及所有后续装载指令的装载。StoreLoad Barriers 会使该屏障之前的所有内存访问指令（存储和装载指令）完成之后，才执行该屏障之后的内存访问指令")])])])]),s._v(" "),t("p",[t("code",[s._v("StoreLoad Barriers")]),s._v(" 是一个“全能型”的屏障，它同时具有其他 3 个屏障的效果。现代的多处理器大多支持该屏障（其他类型的屏障不一定被所有处理器支持）。")]),s._v(" "),t("h3",{attrs:{id:"_2、临界区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、临界区"}},[s._v("#")]),s._v(" 2、临界区")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm11.png",alt:"临界区"}})]),s._v(" "),t("p",[s._v("JMM 会在退出临界区和进入临界区这两个关键时间点做一些特别处理，使得多线程在这两个时间点按某种顺序执行。")]),s._v(" "),t("p",[s._v("临界区内的代码则可以重排序（但 "),t("code",[s._v("JMM")]),s._v(" 不允许临界区内的代码“逸出”到临界区之外，那样会破坏监视器的语义）。虽然线程 A 在临界区内做了重排序，但由于监视器互斥执行的特性，这里的线程 B 根本无法“观察”到线程 A 在临界区内的重排序。这种重排序既提高了执行效率，又没有改变程序的执行结果。")]),s._v(" "),t("h2",{attrs:{id:"七、happens-before"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#七、happens-before"}},[s._v("#")]),s._v(" 七、Happens-Before")]),s._v(" "),t("p",[s._v("在 "),t("code",[s._v("Java")]),s._v(" 规范提案中为让大家理解内存可见性的这个概念，提出了 "),t("code",[s._v("Happens-Before")]),s._v(" 的概念来阐述操作之间的内存可见性。对应 "),t("code",[s._v("Java")]),s._v(" 程序员来说，理解 "),t("code",[s._v("Happens-Before")]),s._v(" 是理解 "),t("code",[s._v("JMM")]),s._v(" 的关键。")]),s._v(" "),t("p",[t("code",[s._v("JMM")]),s._v(" 这么做的原因是：程序员对于这两个操作是否真的被重排序并不关心，程序员关心的是程序执行时的语义不能被改变（即执行结果不能被改变）。因此，"),t("code",[s._v("Happens-Before")]),s._v(" 关系本质上和 "),t("code",[s._v("as-if-serial")]),s._v(" 语义是一回事。"),t("code",[s._v("as-if-serial")]),s._v(" 语义保证单线程内程序的执行结果不被改变，"),t("code",[s._v("Happens-Before")]),s._v(" 关系保证正确同步的多线程程序的执行结果不被改变。")]),s._v(" "),t("h3",{attrs:{id:"_1、定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、定义"}},[s._v("#")]),s._v(" 1、定义")]),s._v(" "),t("p",[s._v("用 "),t("code",[s._v("Happens-Before")]),s._v(" 的概念来阐述操作之间的内存可见性。在 "),t("code",[s._v("JMM")]),s._v(" 中，如果一个操作执行的结果需要对另一个操作可见，那么这两个操作之间必须要存在 "),t("code",[s._v("Happens-Before")]),s._v(" 关系 。")]),s._v(" "),t("p",[s._v("两个操作之间具有 "),t("code",[s._v("Happens-Before")]),s._v(" 关系，并不意味着前一个操作必须要在后一个操作之前执行！"),t("code",[s._v("Happens-Before")]),s._v(" 仅仅要求前一个操作（执行的结果）对后一个操作可见，且前一个操作按顺序排在第二个操作之前（the first is visible to andordered before the second）。")]),s._v(" "),t("h3",{attrs:{id:"_2、加深理解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、加深理解"}},[s._v("#")]),s._v(" 2、加深理解")]),s._v(" "),t("p",[s._v("上面的定义看起来很矛盾，其实它是站在不同的角度来说的。")]),s._v(" "),t("ol",[t("li",[s._v("站在 Java 程序员的角度来说："),t("code",[s._v("JMM")]),s._v(" 保证，如果一个操作 "),t("code",[s._v("Happens-Before")]),s._v(" 另一个操作，那么第一个操作的执行结果将对第二个操作可见，而且第一个操作的执行顺序排在第二个操作之前。")]),s._v(" "),t("li",[s._v("站在编译器和处理器的角度来说："),t("code",[s._v("JMM")]),s._v(" 允许，两个操作之间存在 "),t("code",[s._v("Happens-Before")]),s._v(" 关系，不要求 "),t("code",[s._v("Java")]),s._v(" 平台的具体实现必须要按照 "),t("code",[s._v("Happens-Before")]),s._v(" 关系指定的顺序来执行。如果重排序之后的执行结果，与按 "),t("code",[s._v("Happens-Before")]),s._v(" 关系来执行的结果一致，那么这种重排序是允许的。")])]),s._v(" "),t("p",[s._v("看下面的代码：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.03")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" y "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.01")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" z "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("站在程序员的角度：")]),s._v(" "),t("ol",[t("li",[s._v("A Happens-Before B")]),s._v(" "),t("li",[s._v("B Happens-Before C")]),s._v(" "),t("li",[s._v("A Happens-Before C")])]),s._v(" "),t("p",[s._v("但是仔细考察，2、3 是必需的，而 1 并不是必需的，因此 "),t("code",[s._v("JMM")]),s._v(" 对这三个 "),t("code",[s._v("Happens-Before")]),s._v(" 关系的处理就分为两类：")]),s._v(" "),t("ol",[t("li",[s._v("会改变程序执行结果的重排序")]),s._v(" "),t("li",[s._v("不会改变程序执行结果的重排序")])]),s._v(" "),t("p",[s._v("JMM 对这两种不同性质的重排序，采用了不同的策略，如下：")]),s._v(" "),t("ol",[t("li",[s._v("对于会改变程序执行结果的重排序，"),t("code",[s._v("JMM")]),s._v(" 要求编译器和处理器必须禁止这种重排序；")]),s._v(" "),t("li",[s._v("对于不会改变程序执行结果的重排序，"),t("code",[s._v("JMM")]),s._v(" 对编译器和处理器不做要求。")])]),s._v(" "),t("p",[s._v("于是，站在我们程序员的角度，看起来这个三个操作满足了 "),t("code",[s._v("Happens-Before")]),s._v(" 关系，而站在编译器和处理器的角度，进行了重排序，而排序后的执行结果，也是满足 "),t("code",[s._v("Happens-Before")]),s._v(" 关系的。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm12.png",alt:"Happens-Before"}})]),s._v(" "),t("h3",{attrs:{id:"_3、happens-before规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、happens-before规则"}},[s._v("#")]),s._v(" 3、Happens-Before规则")]),s._v(" "),t("p",[t("code",[s._v("JMM")]),s._v(" 为我们提供了以下的 "),t("code",[s._v("Happens-Before")]),s._v(" 规则：")]),s._v(" "),t("ol",[t("li",[s._v("程序顺序规则：一个线程中的每个操作，"),t("code",[s._v("Happens-Before")]),s._v(" 于该线程中的任意后续操作。")]),s._v(" "),t("li",[s._v("监视器锁规则：对一个锁的解锁，"),t("code",[s._v("Happens-Before")]),s._v(" 于随后对这个锁的加锁。")]),s._v(" "),t("li",[t("code",[s._v("volatile")]),s._v(" 变量规则：对一个 "),t("code",[s._v("volatile")]),s._v(" 域的写，"),t("code",[s._v("Happens-Before")]),s._v(" 于任意后续对这个 "),t("code",[s._v("volatile")]),s._v(" 域的读。")]),s._v(" "),t("li",[s._v("传递性：如果 A "),t("code",[s._v("Happens-Before")]),s._v(" B，且 B "),t("code",[s._v("Happens-Before")]),s._v(" C，那么 A "),t("code",[s._v("Happens-Before")]),s._v(" C。")]),s._v(" "),t("li",[t("code",[s._v("start()")]),s._v(" 规则：如果线程 A 执行操作 "),t("code",[s._v("ThreadB.start()")]),s._v("（启动线程 B），那么 A 线程的 "),t("code",[s._v("ThreadB.start()")]),s._v(" 操作 "),t("code",[s._v("Happens-Before")]),s._v(" 于线程 B 中的任意操作。")]),s._v(" "),t("li",[t("code",[s._v("join()")]),s._v(" 规则：如果线程 A 执行操作 "),t("code",[s._v("ThreadB.join()")]),s._v(" 并成功返回，那么线程 B中的任意操作 "),t("code",[s._v("Happens-Before")]),s._v(" 于线程 A 从 "),t("code",[s._v("ThreadB.join()")]),s._v(" 操作成功返回。")]),s._v(" "),t("li",[s._v("线程中断规则:对线程 "),t("code",[s._v("interrupt()")]),s._v(" 方法的调用 "),t("code",[s._v("Happens-Before")]),s._v(" 于被中断线程的代码检测到中断事件的发生。")])]),s._v(" "),t("h2",{attrs:{id:"八、volatile详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#八、volatile详解"}},[s._v("#")]),s._v(" 八、volatile详解")]),s._v(" "),t("h3",{attrs:{id:"_1、volatile特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、volatile特性"}},[s._v("#")]),s._v(" 1、volatile特性")]),s._v(" "),t("p",[s._v("可以把对 "),t("code",[s._v("volatile")]),s._v(" 变量的单个读/写，看成是使用同一个锁对这些单个读/写操作做了同步。例如：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Vola")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 使用 volatile 声明64位的 long 型变量\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0L")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getI")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setI")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("increment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("p",[s._v("可以看成：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("VolaLikeSync")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 普通的 long 型变量\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0L")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getI")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setI")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("increment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" temp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getI")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        temp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" temp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1L")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setI")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("temp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("p",[s._v("所以 "),t("code",[s._v("volatile")]),s._v(" 变量自身具有下列特性：")]),s._v(" "),t("ul",[t("li",[s._v("可见性")])]),s._v(" "),t("p",[s._v("对一个 "),t("code",[s._v("volatile")]),s._v(" 变量的读，总是能看到（任意线程）对这个 "),t("code",[s._v("volatile")]),s._v(" 变量最后的写入。")]),s._v(" "),t("ul",[t("li",[s._v("原子性")])]),s._v(" "),t("p",[s._v("对任意单个 "),t("code",[s._v("volatile")]),s._v(" 变量的读/写具有原子性，但类似于 "),t("code",[s._v("volatile++")]),s._v(" 这种复合操作不具有原子性。")]),s._v(" "),t("h3",{attrs:{id:"_2、volatile的内存语义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、volatile的内存语义"}},[s._v("#")]),s._v(" 2、volatile的内存语义")]),s._v(" "),t("p",[s._v("内存语义：可以简单理解为 "),t("code",[s._v("volatile")]),s._v("、"),t("code",[s._v("synchronize")]),s._v("、"),t("code",[s._v("atomic")]),s._v("、"),t("code",[s._v("lock")]),s._v(" 之类的在 "),t("code",[s._v("JVM")]),s._v(" 中的内存方面实现原则。")]),s._v(" "),t("p",[t("code",[s._v("volatile")]),s._v(" 写的内存语义如下：")]),s._v(" "),t("p",[s._v("当写一个 "),t("code",[s._v("volatile")]),s._v(" 变量时，"),t("code",[s._v("JMM")]),s._v(" 会把该线程对应的本地内存中的共享变量值刷新到主内存。")]),s._v(" "),t("p",[t("code",[s._v("volatile")]),s._v(" 读的内存语义如下：")]),s._v(" "),t("p",[s._v("当读一个 "),t("code",[s._v("volatile")]),s._v(" 变量时，"),t("code",[s._v("JMM")]),s._v(" 会把该线程对应的本地内存置为无效。线程接下来将从主内存中读取共享变量。")]),s._v(" "),t("p",[s._v("所以对于代码：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ControlDep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" flag "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("init")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 操作1")]),s._v("\n        a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 操作2")]),s._v("\n        flag "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//.......")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("use")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 操作3")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("flag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 操作4")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("p",[s._v("如果我们将 "),t("code",[s._v("flag")]),s._v(" 变量以 "),t("code",[s._v("volatile")]),s._v(" 关键字修饰，那么实际上：线程 A 在写 "),t("code",[s._v("flag")]),s._v(" 变量后，本地内存 A 中被线程 A 更新过的两个共享变量的值都被刷新到主内存中。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm13.png",alt:"volatile的写内存语义"}})]),s._v(" "),t("p",[s._v("在读 "),t("code",[s._v("flag")]),s._v(" 变量后，本地内存 B 包含的值已经被置为无效。此时，线程 B 必须从主内存中读取共享变量。线程 B 的读取操作将导致本地内存 B 与主内存中的共享变量的值变成一致。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm14.png",alt:"volatile的读内存语义"}})]),s._v(" "),t("p",[s._v("如果我们把 "),t("code",[s._v("volatile")]),s._v(" 写和 "),t("code",[s._v("volatile")]),s._v(" 读两个步骤综合起来看的话，在读线程 B 读一个 "),t("code",[s._v("volatile")]),s._v(" 变量后，写线程 A 在写这个 "),t("code",[s._v("volatile")]),s._v(" 变量之前所有可见的共享变量的值都将立即变得对读线程 B 可见。")]),s._v(" "),t("h3",{attrs:{id:"_3、为何volatile不是线程安全的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、为何volatile不是线程安全的"}},[s._v("#")]),s._v(" 3、为何volatile不是线程安全的")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm15.png",alt:"为何volatile不是线程安全的"}})]),s._v(" "),t("h4",{attrs:{id:"_1-volatile-内存语义的实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-volatile-内存语义的实现"}},[s._v("#")]),s._v(" (1) volatile 内存语义的实现")]),s._v(" "),t("p",[s._v("下面是 "),t("code",[s._v("volatile")]),s._v(" 重排序规则表")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("第一个操作")]),s._v(" "),t("th",[s._v("第二个操作（普通读/写）")]),s._v(" "),t("th",[s._v("第二个操作（vlatile读）")]),s._v(" "),t("th",[s._v("第二个操作（vlatile写）")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("普通读/写")]),s._v(" "),t("td"),s._v(" "),t("td"),s._v(" "),t("td",[s._v("不允许")])]),s._v(" "),t("tr",[t("td",[s._v("volatile读")]),s._v(" "),t("td",[s._v("不允许")]),s._v(" "),t("td",[s._v("不允许")]),s._v(" "),t("td",[s._v("不允许")])]),s._v(" "),t("tr",[t("td",[s._v("volatile写")]),s._v(" "),t("td"),s._v(" "),t("td",[s._v("不允许")]),s._v(" "),t("td",[s._v("不允许")])])])]),s._v(" "),t("p",[s._v("总结起来就是：")]),s._v(" "),t("ul",[t("li",[s._v("当第二个操作是 "),t("code",[s._v("volatile")]),s._v(" 写时，不管第一个操作是什么，都不能重排序。这个规则确保 "),t("code",[s._v("volatile")]),s._v(" 写之前的操作不会被编译器重排序到 "),t("code",[s._v("volatile")]),s._v(" 写之后。")]),s._v(" "),t("li",[s._v("当第一个操作是 "),t("code",[s._v("volatile")]),s._v(" 读时，不管第二个操作是什么，都不能重排序。这个规则确保 "),t("code",[s._v("volatile")]),s._v(" 读之后的操作不会被编译器重排序到 "),t("code",[s._v("volatile")]),s._v(" 读之前。")]),s._v(" "),t("li",[s._v("当第一个操作是 "),t("code",[s._v("volatile")]),s._v(" 写，第二个操作是 "),t("code",[s._v("volatile")]),s._v(" 读时，不能重排序。")])]),s._v(" "),t("h4",{attrs:{id:"_2-volatile-的内存屏障"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-volatile-的内存屏障"}},[s._v("#")]),s._v(" (2) volatile 的内存屏障")]),s._v(" "),t("p",[s._v("在 "),t("code",[s._v("Java")]),s._v(" 中对于 "),t("code",[s._v("volatile")]),s._v(" 修饰的变量，编译器在生成字节码时，会在指令序列中插入内存屏障来禁止特定类型的处理器重排序问题。")]),s._v(" "),t("h5",{attrs:{id:"volatile-写"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#volatile-写"}},[s._v("#")]),s._v(" volatile 写")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm16.png",alt:"volatile写"}})]),s._v(" "),t("p",[t("code",[s._v("storestore")]),s._v(" 屏障：对于这样的语句 "),t("code",[s._v("store1; storestore; store2")]),s._v("，在 "),t("code",[s._v("store2")]),s._v(" 及后续写入操作执行前，保证 "),t("code",[s._v("store1")]),s._v(" 的写入操作对其它处理器可见。(也就是说如果出现 "),t("code",[s._v("storestore")]),s._v(" 屏障，那么 "),t("code",[s._v("store1")]),s._v(" 指令一定会在 "),t("code",[s._v("store2")]),s._v(" 之前执行，"),t("code",[s._v("CPU")]),s._v(" 不会对 "),t("code",[s._v("store1")]),s._v(" 与 "),t("code",[s._v("store2")]),s._v(" 进行重排序)")]),s._v(" "),t("p",[t("code",[s._v("storeload")]),s._v(" 屏障：对于这样的语句 "),t("code",[s._v("store1; storeload; load2")]),s._v("，在 "),t("code",[s._v("load2")]),s._v(" 及后续所有读取操作执行前，保证 "),t("code",[s._v("store1")]),s._v(" 的写入对所有处理器可见。(也就是说如果出现 "),t("code",[s._v("storeload")]),s._v(" 屏障，那么 "),t("code",[s._v("store1")]),s._v(" 指令一定会在 "),t("code",[s._v("load2")]),s._v(" 之前执行，"),t("code",[s._v("CPU")]),s._v(" 不会对 "),t("code",[s._v("store1")]),s._v(" 与 "),t("code",[s._v("load2")]),s._v(" 进行重排序)")]),s._v(" "),t("h5",{attrs:{id:"volatile-读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#volatile-读"}},[s._v("#")]),s._v(" volatile 读")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm17.png",alt:"volatile读"}})]),s._v(" "),t("p",[s._v("在每个 "),t("code",[s._v("volatile")]),s._v(" 读操作的后面插入一个 "),t("code",[s._v("LoadLoad")]),s._v(" 屏障。在每个 "),t("code",[s._v("volatile")]),s._v(" 读操作的后面插入一个 "),t("code",[s._v("loadstore")]),s._v(" 屏障。")]),s._v(" "),t("p",[t("code",[s._v("loadload")]),s._v(" 屏障：对于这样的语句 "),t("code",[s._v("load1; loadload; load2")]),s._v("，在 "),t("code",[s._v("load2")]),s._v(" 及后续读取操作要读取的数据被访问前，保证 "),t("code",[s._v("load1")]),s._v(" 要读取的数据被读取完毕。（也就是说，如果出现 "),t("code",[s._v("loadload")]),s._v(" 屏障，那么 "),t("code",[s._v("load1")]),s._v(" 指令一定会在 "),t("code",[s._v("load2")]),s._v(" 之前执行，"),t("code",[s._v("CPU")]),s._v(" 不会对 "),t("code",[s._v("load1")]),s._v(" 与 "),t("code",[s._v("load2")]),s._v(" 进行重排序）")]),s._v(" "),t("p",[t("code",[s._v("loadstore")]),s._v(" 屏障：对于这样的语句 "),t("code",[s._v("load1; loadstore; store2")]),s._v("，在 "),t("code",[s._v("store2")]),s._v(" 及后续写入操作被刷出前，保证 "),t("code",[s._v("load1")]),s._v(" 要读取的数据被读取完毕。（也就是说，如果出现 "),t("code",[s._v("loadstore")]),s._v(" 屏障，那么 "),t("code",[s._v("load1")]),s._v(" 指令一定会在 "),t("code",[s._v("store2")]),s._v(" 之前执行，"),t("code",[s._v("CPU")]),s._v(" 不会对 "),t("code",[s._v("load1")]),s._v(" 与 "),t("code",[s._v("store2")]),s._v(" 进行重排序）")]),s._v(" "),t("h3",{attrs:{id:"_4-volatile-的实现原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-volatile-的实现原理"}},[s._v("#")]),s._v(" 4 volatile 的实现原理")]),s._v(" "),t("p",[s._v("通过对 "),t("code",[s._v("OpenJDK")]),s._v(" 中的 "),t("code",[s._v("unsafe.cpp")]),s._v(" 源码的分析，会发现被 "),t("code",[s._v("volatile")]),s._v(" 关键字修饰的变量会存在一个 "),t("code",[s._v("lock")]),s._v(" 的前缀。")]),s._v(" "),t("p",[t("code",[s._v("Lock")]),s._v("前缀，"),t("code",[s._v("Lock")]),s._v(" 不是一种内存屏障，但是它能完成类似内存屏障的功能。"),t("code",[s._v("Lock")]),s._v(" 会对 "),t("code",[s._v("CPU")]),s._v(" 总线和高速缓存加锁，可以理解为 "),t("code",[s._v("CPU")]),s._v(" 指令级的一种锁。")]),s._v(" "),t("p",[s._v("同时该指令会将当前处理器缓存行的数据直接写会到系统内存中，且这个写回内存的操作会使在其他 "),t("code",[s._v("CPU")]),s._v(" 里缓存了该地址的数据无效。")]),s._v(" "),t("p",[s._v("在具体的执行上，它先对总线和缓存加锁，然后执行后面的指令，最后释放锁后会把高速缓存中的脏数据全部刷新回主内存。在 "),t("code",[s._v("Lock")]),s._v(" 锁住总线的时候，其他 "),t("code",[s._v("CPU")]),s._v(" 的读写请求都会被阻塞，直到锁释放。")]),s._v(" "),t("h2",{attrs:{id:"九、final的内存语义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#九、final的内存语义"}},[s._v("#")]),s._v(" 九、final的内存语义")]),s._v(" "),t("p",[s._v("在构造线程的类时，我们有种方式就是让类中所有的成员变量都不可变，利用的就是 "),t("code",[s._v("final")]),s._v(" 关键字，那么这个 "),t("code",[s._v("final")]),s._v(" 为何可以做到呢？重排序这种优化动作对构造方法，一样也是存在的。这就说明，一个成员变量加了 "),t("code",[s._v("final")]),s._v(" 关键字后，"),t("code",[s._v("JMM")]),s._v(" 一定是做了相关处理的。")]),s._v(" "),t("h3",{attrs:{id:"_1、final-的两个重排序规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、final-的两个重排序规则"}},[s._v("#")]),s._v(" 1、final 的两个重排序规则")]),s._v(" "),t("p",[s._v("对应 "),t("code",[s._v("final")]),s._v(" 域，编译器和处理器需要遵守两个重排序规则。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FinalMemory")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 普通变量\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * final 变量\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" j"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FinalMemory")]),s._v(" obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FinalMemory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 写普通域")]),s._v("\n        i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 写 final 域")]),s._v("\n        j "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 写线程A执行\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FinalMemory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 读线程B执行\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("read")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 读对象引用")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FinalMemory")]),s._v(" object "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 读普通域")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 读 final 域")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("j"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br")])]),t("p",[s._v("我们假设一个线程 A 执行 "),t("code",[s._v("write")]),s._v(" 方法，随后另一个线程 B 执行 "),t("code",[s._v("read")]),s._v(" 方法。")]),s._v(" "),t("ol",[t("li",[s._v("在构造函数内对一个 "),t("code",[s._v("final")]),s._v(" 域的写入，与随后把这个被构造对象的引用赋值给一个引用变量，这两个操作之间不能重排序。")])]),s._v(" "),t("p",[s._v("看 "),t("code",[s._v("write()")]),s._v(" 方法，只包含一行代码 "),t("code",[s._v("obj = new FinalMemory();")]),s._v("。这一行代码包含两个步骤：构造一个 "),t("code",[s._v("FinalMemory")]),s._v(" 类型的对象。\n把这个对象的引用赋值给引用变量 "),t("code",[s._v("obj")]),s._v("。假设线程 B 读对象引用（"),t("code",[s._v("FinalMemory object = obj")]),s._v("）与读对象的成员域之间\n（"),t("code",[s._v("int a = object.i; int b = object.j")]),s._v("）没有重排序，下面的图是一种可能的执行时序：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm18.png",alt:"final"}})]),s._v(" "),t("p",[s._v("从上面可能的时序图中我们可以看到，写普通域被编译器重排序到了构造函数之外，读线程 B 错误的读取了普通变量 i 初始化之前的值。而写 "),t("code",[s._v("final")]),s._v(" 域的操作，被写 "),t("code",[s._v("final")]),s._v(" 域的重排序规则“限制”到了构造函数之内，读线程 B 正确读取了 "),t("code",[s._v("final")]),s._v(" 变量初始化之后的值。")]),s._v(" "),t("p",[s._v("总结：写 "),t("code",[s._v("final")]),s._v(" 域的重排序规则可以确保在对象引用为任意线程可见之前，对象的 "),t("code",[s._v("final")]),s._v(" 域已经被正常的初始化了，而普通域不具有这样的保证。")]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("初次读一个包含 "),t("code",[s._v("final")]),s._v(" 域的对象的引用，与随后初次读这个 "),t("code",[s._v("final")]),s._v(" 域，这两个操作之间不能重排序")])]),s._v(" "),t("p",[s._v("在一个线程中，初次读对象引用与初次读该对象包含的 "),t("code",[s._v("final")]),s._v(" 域，"),t("code",[s._v("JMM")]),s._v(" 禁止处理器重排序这两个操作。编译器会在读 final 域操作的前面插入一个 "),t("code",[s._v("LoadLoad")]),s._v("屏障。"),t("code",[s._v("reader()")]),s._v(" 方法包含 3 个步骤：初次读引用变量 "),t("code",[s._v("obj")]),s._v("，初次读引用变量 "),t("code",[s._v("obj")]),s._v(" 指向对象的普通域 "),t("code",[s._v("i")]),s._v("，初次读引用变量 "),t("code",[s._v("obj")]),s._v(" 指向对象的 "),t("code",[s._v("final")]),s._v(" 域 "),t("code",[s._v("j")]),s._v("。我们假设写线程 A 没有发生任何重排序，则下图是一种可能的时序：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm19.png",alt:"final2"}})]),s._v(" "),t("p",[s._v("读对象的普通域的操作被处理器重排序到读对象引用之前。读普通域时，该域还没有被线程 A 写入，所以上面的是一个错误的读取操作。但是读 "),t("code",[s._v("final")]),s._v(" 域的重排序规则把读对象 "),t("code",[s._v("final")]),s._v(" 域的操作“限定”在读对象引用之后，该 "),t("code",[s._v("final")]),s._v(" 域已经被 A 线程初始化了，是一个正确的读取操作。")]),s._v(" "),t("p",[s._v("总结：读 "),t("code",[s._v("final")]),s._v(" 域的重排序规则可以确保在读一个对象的 "),t("code",[s._v("final")]),s._v(" 域之前，一定会先读包含这个 "),t("code",[s._v("final")]),s._v(" 域的对象的引用。")]),s._v(" "),t("h3",{attrs:{id:"_2、final-域为引用类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、final-域为引用类型"}},[s._v("#")]),s._v(" 2、final 域为引用类型")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FinalRefMemory")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * final 是引用类型\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" intArray"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FinalRefMemory")]),s._v(" obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FinalRefMemory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 操作1")]),s._v("\n        intArray "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 操作2")]),s._v("\n        intArray"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 写线程A执行\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("writerOne")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 操作3")]),s._v("\n        obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FinalRefMemory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 写线程B执行\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("writeTwo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 操作4")]),s._v("\n        obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("intArray"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 读线程C执行\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("reader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 操作5")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 操作6")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" temp1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("intArray"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br")])]),t("p",[s._v("在上面的代码中，"),t("code",[s._v("final")]),s._v(" 域是一个引用类型，它引用了一个 "),t("code",[s._v("int")]),s._v(" 类型的数组，对于引用类型，写 "),t("code",[s._v("final")]),s._v(" 域的重排序规则对编译器和处理器增加了一下的约束：在构造函数内对一个 "),t("code",[s._v("final")]),s._v(" 引用的对象的成员域的写入，与随后在构造函数外把这个被构造对象的引用赋值给一个引用变量，这两个操作之间不能重排序。")]),s._v(" "),t("p",[s._v("我们假设线程 A 先执行 "),t("code",[s._v("writeOne()")]),s._v(" 操作，执行完后线程 B 执行 "),t("code",[s._v("writeTwo()")]),s._v(" 操作，执行完后线程 C 执行 "),t("code",[s._v("reader()")]),s._v(" 操作，下图是一种可能的执行时序：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm20.png",alt:"final3"}})]),s._v(" "),t("p",[s._v("操作1 是对 "),t("code",[s._v("final")]),s._v(" 域的写入，操作2 是对这个 "),t("code",[s._v("final")]),s._v(" 域引用的对象的成员域的写入，操作3 是把被构造的对象的引用赋值给某个引用变量。这里除了前面提到的 操作1 不能和 操作3重排序外，操作2 和 操作3 也不能重排序。")]),s._v(" "),t("p",[t("code",[s._v("JMM")]),s._v(" 可以确保读线程 C 至少能看到写线程 A 在构造函数中对 "),t("code",[s._v("final")]),s._v(" 引用对象的成员域的写入。即 C 至少能看到数组下标 0 的值为 1。而写线程 B 对数组元素的写入，读线程 C 可能看得到，也可能看不到。"),t("code",[s._v("JMM")]),s._v(" 不保证线程 B 的写入对读线程 C 可见，因为写线程 B 和读线程 C 之间存在数据竞争，此时的执行结果不可预知。")]),s._v(" "),t("p",[s._v("如果想要确保读线程 C 看到写线程 B 对数组元素的写入，写线程 B 和读线程 C 之间需要使用同步（"),t("code",[s._v("lock")]),s._v(" 或 "),t("code",[s._v("volatile")]),s._v("）来确保内存可见性。")]),s._v(" "),t("h3",{attrs:{id:"_3、final-引用不能从构造函数内逃逸"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、final-引用不能从构造函数内逃逸"}},[s._v("#")]),s._v(" 3、final 引用不能从构造函数内逃逸")]),s._v(" "),t("p",[s._v("写 "),t("code",[s._v("final")]),s._v(" 域的重排序规则可以确保：在引用变量为任意线程可见之前，该引用变量指向的对象的 "),t("code",[s._v("final")]),s._v(" 域已经在构造函数中被正确初始化过了。其实，要得到这个效果，还需要一个保证：在构造函数内部，不能让这个被构造对象的引用为其他线程所见，也就是对象引用不能在构造函数中逃逸。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FinalEscape")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FinalEscape")]),s._v(" obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FinalEscape")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 写 final 域")]),s._v("\n        i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// this 引用溢出")]),s._v("\n        obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FinalEscape")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("read")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" temp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" obj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("p",[s._v("假设一个线程 A 执行 "),t("code",[s._v("write()")]),s._v(" 方法，另一个线程 B 执行 "),t("code",[s._v("read()")]),s._v(" 方法。这里的操作 2 使得对象还未完成构造前就为线程 B 可见。即使这里的操作 2 是构造函数的最后一步，且在程序中操作 2 排在操作 1 后面，执行 "),t("code",[s._v("read()")]),s._v(" 方法的线程仍然可能无法看到 "),t("code",[s._v("final")]),s._v(" 域被初始化后的值，因为这里的操作 1 和操作 2 之间可能被重排序。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm21.png",alt:"final4"}})]),s._v(" "),t("p",[s._v("因此在构造函数返回前，被构造对象的引用不能为其他线程所见，因为此时的 "),t("code",[s._v("final")]),s._v(" 域可能还没有被初始化。")]),s._v(" "),t("h3",{attrs:{id:"_4、final-语义的实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、final-语义的实现"}},[s._v("#")]),s._v(" 4、final 语义的实现")]),s._v(" "),t("p",[s._v("会要求编译器在 "),t("code",[s._v("final")]),s._v(" 域的写之后，构造函数 "),t("code",[s._v("return")]),s._v(" 之前插入一个 "),t("code",[s._v("StoreStore")]),s._v(" 障屏。")]),s._v(" "),t("p",[s._v("读 "),t("code",[s._v("final")]),s._v(" 域的重排序规则要求编译器在读 "),t("code",[s._v("final")]),s._v(" 域的操作前面插入一个 "),t("code",[s._v("LoadLoad")]),s._v(" 屏障。")]),s._v(" "),t("h2",{attrs:{id:"十、锁的内存语义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#十、锁的内存语义"}},[s._v("#")]),s._v(" 十、锁的内存语义")]),s._v(" "),t("p",[s._v("当线程释放锁时，"),t("code",[s._v("JMM")]),s._v(" 会把该线程对应的本地内存中的共享变量刷新到主内存中。")]),s._v(" "),t("p",[s._v("当线程获取锁时，"),t("code",[s._v("JMM")]),s._v(" 会把该线程对应的本地内存置为无效。从而使得被监视器保护的临界区代码必须从主内存中读取共享变量。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm22.png",alt:"sync"}})]),s._v(" "),t("p",[s._v("回顾之前 "),t("RouterLink",{attrs:{to:"/backend/线程之间的共享和协作.html"}},[s._v("线程之间的共享和协作")]),s._v("  博客中的 "),t("code",[s._v("VolatileCase")]),s._v("，为了让子线程可以及时看到 "),t("code",[s._v("ready")]),s._v(" 变量的修改，我们需要将 "),t("code",[s._v("ready")]),s._v(" 变量以 "),t("code",[s._v("volatile")]),s._v(" 来修饰。")],1),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("VolatileCase")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" READY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" NUMBER"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PrintThread")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PrintThread is running ..."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 无限循环")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("READY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"number = "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" NUMBER"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PrintThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SleepTool")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("second")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        NUMBER "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("51")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        READY "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SleepTool")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("second")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"main is ended!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br")])]),t("p",[s._v("但是，当我们将程序做如下改造：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SyncMemory")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" ready"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PrintThread")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("ready"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"number = "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"number = "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PrintThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SleepTool")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("second")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        number "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("51")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        ready "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SleepTool")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("second")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"main is ended!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br")])]),t("p",[s._v("执行结果：")]),s._v(" "),t("div",{staticClass:"language-console line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("number = 0\nnumber = 0\nnumber = 0\nnumber = 0\nnumber = 0\n...\nnumber = 0\nnumber = 0\nnumber = 0\nnumber = 51\nmain is ended!\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("结合前面锁的内存语义，我们可以知道，当进入 "),t("code",[s._v("synchronized")]),s._v(" 语句块时，子线程会被强制从主内存中读取共享变量，其中就包括了 "),t("code",[s._v("ready")]),s._v(" 变量，所以子线程同样中止了。")]),s._v(" "),t("h3",{attrs:{id:"_1、synchronized-的实现原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、synchronized-的实现原理"}},[s._v("#")]),s._v(" 1、synchronized 的实现原理")]),s._v(" "),t("p",[t("code",[s._v("synchronized")]),s._v(" 在 "),t("code",[s._v("JVM")]),s._v(" 里的实现都是基于进入和退出 "),t("code",[s._v("Monitor")]),s._v(" 对象来实现方法同步和代码块同步，虽然具体实现细节不一样，但是都可以通过成对的 "),t("code",[s._v("MonitorEnter")]),s._v(" 和 "),t("code",[s._v("MonitorExit")]),s._v(" 指令来实现。")]),s._v(" "),t("p",[s._v("对同步块，"),t("code",[s._v("MonitorEnter")]),s._v(" 指令插入在同步代码块的开始位置，当代码执行到该指令时，将会尝试获取该对象 "),t("code",[s._v("Monitor")]),s._v(" 的所有权，即尝试获得该对象的锁，而 "),t("code",[s._v("MonitorExit")]),s._v(" 指令则插入在方法结束处和异常处，"),t("code",[s._v("JVM")]),s._v(" 保证每个 "),t("code",[s._v("MonitorEnter")]),s._v(" 必须有对应的 "),t("code",[s._v("MonitorExit")]),s._v("。")]),s._v(" "),t("p",[s._v("对同步方法，从同步方法反编译的结果来看，方法的同步并没有通过指令 "),t("code",[s._v("MonitorEnter")]),s._v(" 和 "),t("code",[s._v("MonitorExit")]),s._v(" 来实现，相对于普通方法，其常量池中多了 "),t("code",[s._v("ACC_SYNCHRONIZED")]),s._v(" 标示符。")]),s._v(" "),t("p",[t("code",[s._v("JVM")]),s._v(" 就是根据该标示符来实现方法的同步的：当方法被调用时，调用指令将会检查方法的 "),t("code",[s._v("ACC_SYNCHRONIZED")]),s._v(" 访问标志是否被设置，如果设置了，执行线程将先获取 "),t("code",[s._v("Monitor")]),s._v("，获取成功之后才能执行方法体，方法执行完后再释放 "),t("code",[s._v("Monitor")]),s._v("。在方法执行期间，其他任何线程都无法再获得同一个 "),t("code",[s._v("Monitor")]),s._v(" 对象。")]),s._v(" "),t("p",[t("code",[s._v("synchronized")]),s._v(" 使用的锁是存放在 "),t("code",[s._v("Java")]),s._v(" 对象头里面：")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("长度")]),s._v(" "),t("th",[s._v("内容")]),s._v(" "),t("th",[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("32/64bit")]),s._v(" "),t("td",[s._v("Mark Word")]),s._v(" "),t("td",[s._v("存储对象的 HashCode 货锁信息")])]),s._v(" "),t("tr",[t("td",[s._v("32/64bit")]),s._v(" "),t("td",[s._v("Class Metadata Address")]),s._v(" "),t("td",[s._v("存储对象类型数据的指针")])]),s._v(" "),t("tr",[t("td",[s._v("32/64bit")]),s._v(" "),t("td",[s._v("Array length")]),s._v(" "),t("td",[s._v("数据的长度（如果当前对象是数组）")])])])]),s._v(" "),t("p",[s._v("具体位置是对象头里面的 "),t("code",[s._v("MarkWord")]),s._v("，"),t("code",[s._v("MarkWord")]),s._v(" 里默认数据是存储对象的 "),t("code",[s._v("HashCode")]),s._v(" 等信息，")]),s._v(" "),t("p",[s._v("| 锁状态 | 25bit | 4bit | 1bit是否是偏向锁 | 2bit锁标志位 |\n| --- | --- | --- |\n| 无所状态 | 对象的 HashCode | 对象分代年龄 | 0 | 01 |")]),s._v(" "),t("p",[s._v("但是会随着对象的运行改变而发生变化，不同的锁状态对应着不同的记录存储方式")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm23.png",alt:"sync2"}})]),s._v(" "),t("h3",{attrs:{id:"_2、深入了解锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、深入了解锁"}},[s._v("#")]),s._v(" 2、深入了解锁")]),s._v(" "),t("h4",{attrs:{id:"_1-自旋锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-自旋锁"}},[s._v("#")]),s._v(" (1) 自旋锁")]),s._v(" "),t("h5",{attrs:{id:"原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),t("p",[s._v("自旋锁原理非常简单，如果持有锁的线程能在很短时间内释放锁资源，那么那些等待竞争锁的线程就不需要做内核态和用户态之间的切换进入阻塞挂起状态，它们只需要等一等（自旋），等持有锁的线程释放锁后即可立即获取锁，这样就避免用户线程和内核的切换的消耗。")]),s._v(" "),t("p",[s._v("但是线程自旋是需要消耗 "),t("code",[s._v("CPU")]),s._v(" 的，说白了就是让 "),t("code",[s._v("CPU")]),s._v(" 在做无用功，线程不能一直占用 "),t("code",[s._v("CPU")]),s._v(" 自旋做无用功，所以需要设定一个自旋等待的最大时间。")]),s._v(" "),t("p",[s._v("如果持有锁的线程执行的时间超过自旋等待的最大时间扔没有释放锁，就会导致其它争用锁的线程在最大等待时间内还是获取不到锁，这时争用线程会停止自旋进入阻塞状态。")]),s._v(" "),t("h5",{attrs:{id:"自旋锁的优缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自旋锁的优缺点"}},[s._v("#")]),s._v(" 自旋锁的优缺点")]),s._v(" "),t("p",[s._v("自旋锁尽可能的减少线程的阻塞，这对于锁的竞争不激烈，且占用锁时间非常短的代码块来说性能能大幅度的提升，因为自旋的消耗会小于线程阻塞挂起操作的消耗！")]),s._v(" "),t("p",[s._v("但是如果锁的竞争激烈，或者持有锁的线程需要长时间占用锁执行同步块，这时候就不适合使用自旋锁了，因为自旋锁在获取锁前一直都是占用 "),t("code",[s._v("CPU")]),s._v(" 做无用功，线程自旋的消耗大于线程阻塞挂起操作的消耗，其它需要 "),t("code",[s._v("CPU")]),s._v(" 的线程又不能获取到 "),t("code",[s._v("CPU")]),s._v("，造成 "),t("code",[s._v("CPU")]),s._v(" 的浪费。")]),s._v(" "),t("h5",{attrs:{id:"自旋锁时间阈值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自旋锁时间阈值"}},[s._v("#")]),s._v(" 自旋锁时间阈值")]),s._v(" "),t("p",[s._v("自旋锁的目的是为了占着 "),t("code",[s._v("CPU")]),s._v(" 的资源不释放，等到获取到锁立即进行处理。但是如何去选择自旋的执行时间呢？如果自旋执行时间太长，会有大量的线程处于自旋状态占用 "),t("code",[s._v("CPU")]),s._v(" 资源，进而会影响整体系统的性能。因此自旋次数很重要")]),s._v(" "),t("p",[t("code",[s._v("JVM")]),s._v(" 对于自旋次数的选择，"),t("code",[s._v("jdk1.5")]),s._v(" 默认为 10 次，在 1.6 引入了适应性自旋锁，适应性自旋锁意味着自旋的时间不在是固定的了，而是由前一次在同一个锁上的自旋时间以及锁的拥有者的状态来决定，基本认为一个线程上下文切换的时间是最佳的一个时间。")]),s._v(" "),t("p",[t("code",[s._v("JDK1.6")]),s._v(" 中 "),t("code",[s._v("-XX:+UseSpinning")]),s._v(" 开启自旋锁； "),t("code",[s._v("JDK1.7")]),s._v(" 后，去掉此参数，由 "),t("code",[s._v("JVM")]),s._v(" 控制；")]),s._v(" "),t("h4",{attrs:{id:"_2-锁的状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-锁的状态"}},[s._v("#")]),s._v(" (2) 锁的状态")]),s._v(" "),t("p",[s._v("一共有四种状态，无锁状态、偏向锁状态、轻量级锁状态和重量级锁状态，它会随着竞争情况逐渐升级。锁可以升级但不能降级，目的是为了提高获得锁和释放锁的效率。")]),s._v(" "),t("h4",{attrs:{id:"_3-偏向锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-偏向锁"}},[s._v("#")]),s._v(" (3) 偏向锁")]),s._v(" "),t("p",[s._v("引入背景：大多数情况下锁不仅不存在多线程竞争，而且总是由同一线程多次获得，为了让线程获得锁的代价更低而引入了偏向锁，减少不必要的 "),t("code",[s._v("CAS")]),s._v(" 操作。")]),s._v(" "),t("p",[s._v("偏向锁，顾名思义，它会偏向于第一个访问锁的线程，如果在运行过程中，同步锁只有一个线程访问，不存在多线程争用的情况，则线程是不需要触发同步的，减少加锁／解锁的一些 "),t("code",[s._v("CAS")]),s._v(" 操作（比如等待队列的一些 "),t("code",[s._v("CAS")]),s._v(" 操作），这种情况下，就会给线程加一个偏向锁。 如果在运行过程中，遇到了其他线程抢占锁，则持有偏向锁的线程会被挂起，"),t("code",[s._v("JVM")]),s._v(" 会消除它身上的偏向锁，将锁恢复到标准的轻量级锁。它通过消除资源无竞争情况下的同步原语，进一步提高了程序的运行性能。")]),s._v(" "),t("p",[s._v("偏向锁获取过程：")]),s._v(" "),t("ol",[t("li",[s._v("访问 "),t("code",[s._v("Mark Word")]),s._v(" 中偏向锁的标识是否设置成 1，锁标志位是否为01，确认为可偏向状态。")]),s._v(" "),t("li",[s._v("如果为可偏向状态，则测试线程 ID 是否指向当前线程，如果是，进入步骤 5，否则进入步骤 3。")]),s._v(" "),t("li",[s._v("如果线程 ID 并未指向当前线程，则通过 "),t("code",[s._v("CAS")]),s._v(" 操作竞争锁。如果竞争成功，则将 "),t("code",[s._v("Mark Word")]),s._v(" 中线程 ID 设置为当前线程 ID，然后执行 5；如果竞争失败，执行 4。")]),s._v(" "),t("li",[s._v("如果 "),t("code",[s._v("CAS")]),s._v(" 获取偏向锁失败，则表示有竞争。当到达全局安全点（safepoint）时获得偏向锁的线程被挂起，偏向锁升级为轻量级锁，然后被阻塞在安全点的线程继续往下执行同步代码。（撤销偏向锁的时候会导致 stop theword）")]),s._v(" "),t("li",[s._v("执行同步代码。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm24.png",alt:"sync3"}})]),s._v(" "),t("p",[s._v("偏向锁的释放过程：")]),s._v(" "),t("p",[s._v("锁时，持有偏向锁的线程才会释放偏向锁，线程不会主动去释放偏向锁。偏向锁的撤销，需要等待全局安全点（在这个时间点上没有字节码正在执行），它会首先暂停拥有偏向锁的线程，判断锁对象是否处于被锁定状态，撤销偏向锁后恢复到未锁定（标志位为“01”）或轻量级锁（标志位为“00”）的状态。")]),s._v(" "),t("p",[s._v("偏向锁的适用场景：")]),s._v(" "),t("p",[s._v("始终只有一个线程在执行同步块，在它没有执行完释放锁之前，没有其它线程去执行同步块，在锁无竞争的情况下使用，一旦有了竞争就升级为轻量级锁，升级为轻量级锁的时候需要撤销偏向锁，撤销偏向锁的时候会导致 stop the word 操作；在有锁的竞争时，偏向锁会多做很多额外操作，尤其是撤销偏向所的时候会导致\n进入安全点，安全点会导致 stw，导致性能下降，这种情况下应当禁用。")]),s._v(" "),t("p",[s._v("jvm 开启/关闭偏向锁：")]),s._v(" "),t("ul",[t("li",[s._v("开启偏向锁：-XX:+UseBiasedLocking -XX:BiasedLockingStartupDelay=0")]),s._v(" "),t("li",[s._v("关闭偏向锁：-XX:-UseBiasedLocking")])]),s._v(" "),t("h4",{attrs:{id:"_4-轻量级锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-轻量级锁"}},[s._v("#")]),s._v(" (4) 轻量级锁")]),s._v(" "),t("p",[s._v("轻量级锁是由偏向锁升级来的，偏向锁运行在一个线程进入同步块的情况下，当第二个线程加入锁争用的时候，偏向锁就会升级为轻量级锁；")]),s._v(" "),t("p",[s._v("轻量级锁的加锁过程：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("在代码进入同步块的时候，如果同步对象锁状态为无锁状态且不允许进行偏向（锁标志位为“01”状态，是否为偏向锁为“0”），虚拟机首先将在当前线程的栈帧中建立一个名为锁记录（Lock Record）的空间，用于存储锁对象目前的Mark Word 的拷贝，官方称之为 Displaced Mark Word。")])]),s._v(" "),t("li",[t("p",[s._v("拷贝成功后，虚拟机将使用 CAS 操作尝试将对象的 Mark Word 更新为指向 LockRecord 的指针，并将 Lock record 里的 owner 指针指向 object mark word。如果更新成功，则执行步骤 3，否则执行步骤 4。")])]),s._v(" "),t("li",[t("p",[s._v("如果这个更新动作成功了，那么这个线程就拥有了该对象的锁，并且对象 MarkWord 的锁标志位设置为“00”，即表示此对象处于轻量级锁定状态")])]),s._v(" "),t("li",[t("p",[s._v("如果这个更新操作失败了，虚拟机首先会检查对象的 Mark Word 是否指向当前线程的栈帧，如果是就说明当前线程已经拥有了这个对象的锁，那就可以直接进入同步块继续执行。否则说明多个线程竞争锁，当竞争线程尝试占用轻量级锁失败多次之后，轻量级锁就会膨胀为重量级锁，重量级线程指针指向竞争线程，竞争线程也会阻塞，等待轻量级线程释放锁后唤醒他。锁标志的状态值变为“10”，Mark Word 中存储的就是指向重量级锁（互斥量）的指针，后面等待锁的线程也要进入阻塞状态。")])])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://yjtravel-public.oss-cn-beijing.aliyuncs.com/my-blog/basic/jmm25.png",alt:"sync4"}})]),s._v(" "),t("h4",{attrs:{id:"_4-不同锁的比较"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-不同锁的比较"}},[s._v("#")]),s._v(" (4) 不同锁的比较")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("锁")]),s._v(" "),t("th",[s._v("优点")]),s._v(" "),t("th",[s._v("缺点")]),s._v(" "),t("th",[s._v("使用场景")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("偏向锁")]),s._v(" "),t("td",[s._v("加锁和解锁不需要额外的消耗和执行非同步方法比仅存在纳秒级的差距")]),s._v(" "),t("td",[s._v("如果线程间存在锁竞争，会带来额外的锁撤销的消耗")]),s._v(" "),t("td",[s._v("适用于只有一个线程的访问同步块场景")])]),s._v(" "),t("tr",[t("td",[s._v("轻量级锁")]),s._v(" "),t("td",[s._v("竞争线程不会阻塞，调高了程序的响应速度")]),s._v(" "),t("td",[s._v("如果始终的补刀锁竞争的线程使用自旋会消耗 "),t("code",[s._v("CPU")])]),s._v(" "),t("td",[s._v("追求响应时间；同步块执行速度非常快")])]),s._v(" "),t("tr",[t("td",[s._v("重量级锁")]),s._v(" "),t("td",[s._v("线程竞争不使用自旋，不会消耗 "),t("code",[s._v("CPU")])]),s._v(" "),t("td",[s._v("线程阻塞，响应时间缓慢")]),s._v(" "),t("td",[s._v("追求吞吐量；同步块执行速度较长")])])])]),s._v(" "),t("h3",{attrs:{id:"_3、jdk-对锁的更多优化措施"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、jdk-对锁的更多优化措施"}},[s._v("#")]),s._v(" 3、JDK 对锁的更多优化措施")]),s._v(" "),t("h4",{attrs:{id:"_1-逃逸分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-逃逸分析"}},[s._v("#")]),s._v(" (1) 逃逸分析")]),s._v(" "),t("p",[s._v("如果证明一个对象不会逃逸方法外或者线程外，则可针对此变量进行优化：同步消除 "),t("code",[s._v("synchronization Elimination")]),s._v("，如果一个对象不会逃逸出线程，则对此变量的同步措施可消除。")]),s._v(" "),t("h4",{attrs:{id:"_2-锁消除和粗化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-锁消除和粗化"}},[s._v("#")]),s._v(" (2) 锁消除和粗化")]),s._v(" "),t("p",[s._v("锁消除：虚拟机的运行时编译器在运行时如果检测到一些要求同步的代码上不可能发生共享数据竞争，则会去掉这些锁。")]),s._v(" "),t("p",[s._v("锁粗化：将临近的代码块用同一个锁合并起来。")]),s._v(" "),t("p",[s._v("消除无意义的锁获取和释放，可以提高程序运行性能。")]),s._v(" "),t("Valine")],1)}),[],!1,null,null,null);a.default=e.exports}}]);