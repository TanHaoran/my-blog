(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{278:function(t,a,_){"use strict";_.r(a);var r=_(0),v=Object(r.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"桥接模式bridge"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#桥接模式bridge"}},[t._v("#")]),t._v(" 桥接模式Bridge")]),t._v(" "),_("Counter",{attrs:{path:"pattern",name:"桥接模式Bridge"}}),t._v(" "),_("h2",{attrs:{id:"一、概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、概念"}},[t._v("#")]),t._v(" 一、概念")]),t._v(" "),_("h3",{attrs:{id:"_1、定义"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1、定义"}},[t._v("#")]),t._v(" 1、定义")]),t._v(" "),_("p",[t._v("将抽象部分与它的具体实现部分分离，使它们都可以独立地变化，通过组合的方式建立两个类之间联系，而不是继承。")]),t._v(" "),_("h3",{attrs:{id:"_2、类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2、类型"}},[t._v("#")]),t._v(" 2、类型")]),t._v(" "),_("p",[t._v("结构型")]),t._v(" "),_("h3",{attrs:{id:"_3、适用场景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3、适用场景"}},[t._v("#")]),t._v(" 3、适用场景")]),t._v(" "),_("ul",[_("li",[t._v("抽象和具体实现之间增加更多的灵活性")]),t._v(" "),_("li",[t._v("一个类存在两个（或多个）独立变化的维度，且这两个（或多个）维度度需要独立进行扩展")]),t._v(" "),_("li",[t._v("不希望使用继承，或因为多层继承导致系统类的个数剧增")])]),t._v(" "),_("h3",{attrs:{id:"_4、优点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4、优点"}},[t._v("#")]),t._v(" 4、优点")]),t._v(" "),_("ul",[_("li",[t._v("分离抽象部分及其具体实现部分")]),t._v(" "),_("li",[t._v("提高了系统的可扩展性")]),t._v(" "),_("li",[t._v("符合开闭原则")]),t._v(" "),_("li",[t._v("符合合成复用原则")])]),t._v(" "),_("h3",{attrs:{id:"_5、缺点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5、缺点"}},[t._v("#")]),t._v(" 5、缺点")]),t._v(" "),_("ul",[_("li",[t._v("增加了系统的理解与设计难度")]),t._v(" "),_("li",[t._v("需要正确地识别出系统中两个独立变化的维度")])]),t._v(" "),_("h3",{attrs:{id:"_6、相关设计模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6、相关设计模式"}},[t._v("#")]),t._v(" 6、相关设计模式")]),t._v(" "),_("ul",[_("li",[t._v("桥接模式和组合模式")])]),t._v(" "),_("p",[t._v("组合模式更强调的是部分和整体间的组合，而桥接模式强调的是平行级别上不同类的组合")]),t._v(" "),_("ul",[_("li",[t._v("桥接模式和适配器模式")])]),t._v(" "),_("p",[t._v("都是让两个东西配合工作，当二者目的不一样。适配器模式是改变已有的接口，让它们相互配合，可以把功能上相似但接口不同的类适配起来。而桥接模式是分离抽象和具体的实现，目的是分离，是把类的抽象和实现分离开。")]),t._v(" "),_("h2",{attrs:{id:"二、coding"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、coding"}},[t._v("#")]),t._v(" 二、Coding")]),t._v(" "),_("Valine")],1)}),[],!1,null,null,null);a.default=v.exports}}]);